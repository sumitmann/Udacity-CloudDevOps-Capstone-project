{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "EKS nodes (AMI family: AmazonLinux2, SSH access: false, private networking: false) [created and managed by eksctl]",
  "Mappings": {
    "ServicePrincipalPartitionMap": {
      "aws": {
        "EC2": "ec2.amazonaws.com",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      },
      "aws-cn": {
        "EC2": "ec2.amazonaws.com.cn",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      },
      "aws-us-gov": {
        "EC2": "ec2.amazonaws.com",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      }
    }
  },
  "Resources": {
    "EgressInterCluster": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "Description": "Allow control plane to communicate with worker nodes in group udacity-capstone-nodes (kubelet and workload TCP ports)",
        "DestinationSecurityGroupId": {
          "Ref": "SG"
        },
        "FromPort": 1025,
        "GroupId": {
          "Fn::ImportValue": "eksctl-udacity-capstone-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": 65535
      }
    },
    "EgressInterClusterAPI": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "Description": "Allow control plane to communicate with worker nodes in group udacity-capstone-nodes (workloads using HTTPS port, commonly used with extension API servers)",
        "DestinationSecurityGroupId": {
          "Ref": "SG"
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::ImportValue": "eksctl-udacity-capstone-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": 443
      }
    },
    "IngressInterCluster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow worker nodes in group udacity-capstone-nodes to communicate with control plane (kubelet and workload TCP ports)",
        "FromPort": 1025,
        "GroupId": {
          "Ref": "SG"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::ImportValue": "eksctl-udacity-capstone-cluster::SecurityGroup"
        },
        "ToPort": 65535
      }
    },
    "IngressInterClusterAPI": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow worker nodes in group udacity-capstone-nodes to communicate with control plane (workloads using HTTPS port, commonly used with extension API servers)",
        "FromPort": 443,
        "GroupId": {
          "Ref": "SG"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::ImportValue": "eksctl-udacity-capstone-cluster::SecurityGroup"
        },
        "ToPort": 443
      }
    },
    "IngressInterClusterCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow control plane to receive API requests from worker nodes in group udacity-capstone-nodes",
        "FromPort": 443,
        "GroupId": {
          "Fn::ImportValue": "eksctl-udacity-capstone-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "SG"
        },
        "ToPort": 443
      }
    },
    "NodeGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "DesiredCapacity": "3",
        "LaunchTemplate": {
          "LaunchTemplateName": {
            "Fn::Sub": "${AWS::StackName}"
          },
          "Version": {
            "Fn::GetAtt": [
              "NodeGroupLaunchTemplate",
              "LatestVersionNumber"
            ]
          }
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": "true",
            "Value": "udacity-capstone-udacity-capstone-nodes-Node"
          },
          {
            "Key": "kubernetes.io/cluster/udacity-capstone",
            "PropagateAtLaunch": "true",
            "Value": "owned"
          }
        ],
        "VPCZoneIdentifier": {
          "Fn::Split": [
            ",",
            {
              "Fn::ImportValue": "eksctl-udacity-capstone-cluster::SubnetsPublic"
            }
          ]
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": "1",
          "MinInstancesInService": "0"
        }
      }
    },
    "NodeGroupLaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/xvda",
              "Ebs": {
                "Encrypted": false,
                "VolumeSize": 80,
                "VolumeType": "gp2"
              }
            }
          ],
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "NodeInstanceProfile",
                "Arn"
              ]
            }
          },
          "ImageId": "ami-0c504dda1302b182f",
          "InstanceType": "t2.micro",
          "MetadataOptions": {
            "HttpPutResponseHopLimit": 2,
            "HttpTokens": "optional"
          },
          "NetworkInterfaces": [
            {
              "DeviceIndex": 0,
              "Groups": [
                {
                  "Fn::ImportValue": "eksctl-udacity-capstone-cluster::SharedNodeSecurityGroup"
                },
                {
                  "Ref": "SG"
                }
              ]
            }
          ],
          "UserData": "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"
        },
        "LaunchTemplateName": {
          "Fn::Sub": "${AWS::StackName}"
        }
      }
    },
    "NodeInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "NodeInstanceRole"
          }
        ]
      }
    },
    "NodeInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::FindInMap": [
                      "ServicePrincipalPartitionMap",
                      {
                        "Ref": "AWS::Partition"
                      },
                      "EC2"
                    ]
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
          }
        ],
        "Path": "/",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}/NodeInstanceRole"
            }
          }
        ]
      }
    },
    "SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Communication between the control plane and worker nodes in group udacity-capstone-nodes",
        "Tags": [
          {
            "Key": "kubernetes.io/cluster/udacity-capstone",
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}/SG"
            }
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "eksctl-udacity-capstone-cluster::VPC"
        }
      }
    }
  },
  "Outputs": {
    "FeatureLocalSecurityGroup": {
      "Value": true
    },
    "FeaturePrivateNetworking": {
      "Value": false
    },
    "FeatureSharedSecurityGroup": {
      "Value": true
    },
    "InstanceProfileARN": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::InstanceProfileARN"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "NodeInstanceProfile",
          "Arn"
        ]
      }
    },
    "InstanceRoleARN": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::InstanceRoleARN"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "NodeInstanceRole",
          "Arn"
        ]
      }
    }
  }
}
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "EKS nodes (AMI family: AmazonLinux2, SSH access: false, private networking: false) [created and managed by eksctl]",
  "Mappings": {
    "ServicePrincipalPartitionMap": {
      "aws": {
        "EC2": "ec2.amazonaws.com",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      },
      "aws-cn": {
        "EC2": "ec2.amazonaws.com.cn",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      },
      "aws-us-gov": {
        "EC2": "ec2.amazonaws.com",
        "EKS": "eks.amazonaws.com",
        "EKSFargatePods": "eks-fargate-pods.amazonaws.com"
      }
    }
  },
  "Resources": {
    "EgressInterCluster": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "Description": "Allow control plane to communicate with worker nodes in group capstone-workers-eks (kubelet and workload TCP ports)",
        "DestinationSecurityGroupId": {
          "Ref": "SG"
        },
        "FromPort": 1025,
        "GroupId": {
          "Fn::ImportValue": "eksctl-capstone-cluster-eks-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": 65535
      }
    },
    "EgressInterClusterAPI": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "Description": "Allow control plane to communicate with worker nodes in group capstone-workers-eks (workloads using HTTPS port, commonly used with extension API servers)",
        "DestinationSecurityGroupId": {
          "Ref": "SG"
        },
        "FromPort": 443,
        "GroupId": {
          "Fn::ImportValue": "eksctl-capstone-cluster-eks-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "ToPort": 443
      }
    },
    "IngressInterCluster": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow worker nodes in group capstone-workers-eks to communicate with control plane (kubelet and workload TCP ports)",
        "FromPort": 1025,
        "GroupId": {
          "Ref": "SG"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::ImportValue": "eksctl-capstone-cluster-eks-cluster::SecurityGroup"
        },
        "ToPort": 65535
      }
    },
    "IngressInterClusterAPI": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow worker nodes in group capstone-workers-eks to communicate with control plane (workloads using HTTPS port, commonly used with extension API servers)",
        "FromPort": 443,
        "GroupId": {
          "Ref": "SG"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Fn::ImportValue": "eksctl-capstone-cluster-eks-cluster::SecurityGroup"
        },
        "ToPort": 443
      }
    },
    "IngressInterClusterCP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "Description": "Allow control plane to receive API requests from worker nodes in group capstone-workers-eks",
        "FromPort": 443,
        "GroupId": {
          "Fn::ImportValue": "eksctl-capstone-cluster-eks-cluster::SecurityGroup"
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": {
          "Ref": "SG"
        },
        "ToPort": 443
      }
    },
    "NodeGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "DesiredCapacity": "2",
        "LaunchTemplate": {
          "LaunchTemplateName": {
            "Fn::Sub": "${AWS::StackName}"
          },
          "Version": {
            "Fn::GetAtt": [
              "NodeGroupLaunchTemplate",
              "LatestVersionNumber"
            ]
          }
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": "true",
            "Value": "capstone-cluster-eks-capstone-workers-eks-Node"
          },
          {
            "Key": "kubernetes.io/cluster/capstone-cluster-eks",
            "PropagateAtLaunch": "true",
            "Value": "owned"
          }
        ],
        "VPCZoneIdentifier": {
          "Fn::Split": [
            ",",
            {
              "Fn::ImportValue": "eksctl-capstone-cluster-eks-cluster::SubnetsPublic"
            }
          ]
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MaxBatchSize": "1",
          "MinInstancesInService": "0"
        }
      }
    },
    "NodeGroupLaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": "/dev/xvda",
              "Ebs": {
                "Encrypted": false,
                "VolumeSize": 80,
                "VolumeType": "gp2"
              }
            }
          ],
          "IamInstanceProfile": {
            "Arn": {
              "Fn::GetAtt": [
                "NodeInstanceProfile",
                "Arn"
              ]
            }
          },
          "ImageId": "ami-0c504dda1302b182f",
          "InstanceType": "t2.micro",
          "MetadataOptions": {
            "HttpPutResponseHopLimit": 2,
            "HttpTokens": "optional"
          },
          "NetworkInterfaces": [
            {
              "DeviceIndex": 0,
              "Groups": [
                {
                  "Fn::ImportValue": "eksctl-capstone-cluster-eks-cluster::SharedNodeSecurityGroup"
                },
                {
                  "Ref": "SG"
                }
              ]
            }
          ],
          "UserData": "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"
        },
        "LaunchTemplateName": {
          "Fn::Sub": "${AWS::StackName}"
        }
      }
    },
    "NodeInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "NodeInstanceRole"
          }
        ]
      }
    },
    "NodeInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  {
                    "Fn::FindInMap": [
                      "ServicePrincipalPartitionMap",
                      {
                        "Ref": "AWS::Partition"
                      },
                      "EC2"
                    ]
                  }
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKSWorkerNodePolicy"
          },
          {
            "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/AmazonEKS_CNI_Policy"
          }
        ],
        "Path": "/",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}/NodeInstanceRole"
            }
          }
        ]
      }
    },
    "SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Communication between the control plane and worker nodes in group capstone-workers-eks",
        "Tags": [
          {
            "Key": "kubernetes.io/cluster/capstone-cluster-eks",
            "Value": "owned"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName}/SG"
            }
          }
        ],
        "VpcId": {
          "Fn::ImportValue": "eksctl-capstone-cluster-eks-cluster::VPC"
        }
      }
    }
  },
  "Outputs": {
    "FeatureLocalSecurityGroup": {
      "Value": true
    },
    "FeaturePrivateNetworking": {
      "Value": false
    },
    "FeatureSharedSecurityGroup": {
      "Value": true
    },
    "InstanceProfileARN": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::InstanceProfileARN"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "NodeInstanceProfile",
          "Arn"
        ]
      }
    },
    "InstanceRoleARN": {
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}::InstanceRoleARN"
        }
      },
      "Value": {
        "Fn::GetAtt": [
          "NodeInstanceRole",
          "Arn"
        ]
      }
    }
  }
}